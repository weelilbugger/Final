{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/crud.service\";\nexport class UpdateBookComponent {\n  constructor(formBuilder, router, ngZone, crudService, route) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.ngZone = ngZone;\n    this.crudService = crudService;\n    this.route = route;\n    this.Form = this.formBuilder.group({\n      isbn: [''],\n      title: [''],\n      author: [''],\n      description: [''],\n      published_year: [''],\n      publisher: ['']\n    });\n  }\n  ngOnInit() {\n    // Accessing the parameter value from the URL\n    const bookId = this.route.snapshot.paramMap.get('id');\n    console.log('Book ID:', bookId);\n  }\n  onSubmit() {\n    this.crudService.UpdateBook(this.route.snapshot.paramMap.get('id'), this.Form.value).subscribe(() => {\n      console.log('Book updated successfully');\n      this.ngZone.run(() => this.router.navigateByUrl('/books-list'));\n    });\n  }\n}\nUpdateBookComponent.ɵfac = function UpdateBookComponent_Factory(t) {\n  return new (t || UpdateBookComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.CrudService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nUpdateBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateBookComponent,\n  selectors: [[\"app-update-book\"]],\n  decls: 30,\n  vars: 1,\n  consts: [[1, \"row\", \"justive-content-center\", \"mt-5\"], [1, \"col-md-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"isbn\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"title\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"author\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"description\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"published_year\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"publisher\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"]],\n  template: function UpdateBookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateBookComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\");\n      i0.ɵɵtext(5, \"ISBN\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\");\n      i0.ɵɵtext(9, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\");\n      i0.ɵɵtext(13, \"Author\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\");\n      i0.ɵɵtext(17, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\");\n      i0.ɵɵtext(21, \"Published Year\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\");\n      i0.ɵɵtext(25, \"Publisher\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 3)(28, \"button\", 10);\n      i0.ɵɵtext(29, \"Update Book\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.Form);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["UpdateBookComponent","constructor","formBuilder","router","ngZone","crudService","route","Form","group","isbn","title","author","description","published_year","publisher","ngOnInit","bookId","snapshot","paramMap","get","console","log","onSubmit","UpdateBook","value","subscribe","run","navigateByUrl","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","NgZone","i3","CrudService","ActivatedRoute","selectors","decls","vars","consts","template","UpdateBookComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","UpdateBookComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Matti\\Downloads\\GP4\\mean-crud-booklist\\src\\app\\components\\update-book\\update-book.component.ts","C:\\Users\\Matti\\Downloads\\GP4\\mean-crud-booklist\\src\\app\\components\\update-book\\update-book.component.html"],"sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CrudService } from 'src/app/service/crud.service';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\nselector: 'app-update-book',\ntemplateUrl: './update-book.component.html',\n\nstyleUrls: ['./update-book.component.css']\n})\nexport class UpdateBookComponent implements OnInit {\nForm: FormGroup;\n\nconstructor(\npublic formBuilder: FormBuilder,\nprivate router: Router,\nprivate ngZone: NgZone,\nprivate crudService: CrudService,\nprivate route: ActivatedRoute\n) {\nthis.Form = this.formBuilder.group({\nisbn: [''],\ntitle: [''],\nauthor: [''],\ndescription: [''],\npublished_year: [''],\npublisher: ['']\n})\n}\nngOnInit(): void { \n  // Accessing the parameter value from the URL\n  const bookId = this.route.snapshot.paramMap.get('id');\n  console.log('Book ID:', bookId);}\nonSubmit(): void {\n  \n    this.crudService.UpdateBook(this.route.snapshot.paramMap.get('id'), this.Form.value)\n      .subscribe(() => {\n        console.log('Book updated successfully');\n        this.ngZone.run(() => this.router.navigateByUrl('/books-list'));\n      });\n  \n}\n}\n","<div class=\"row justive-content-center mt-5\">\n    <div class=\"col-md-4\">\n    <form [formGroup]=\"Form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n    <label>ISBN</label>\n    <input class=\"form-control\" type=\"text\"\n    formControlName=\"isbn\" required>\n    </div>\n    <div class=\"form-group\">\n        <label>Title</label>\n        <input class=\"form-control\" type=\"text\"\n        formControlName=\"title\" required>\n        </div>\n        <div class=\"form-group\">\n        <label>Author</label>\n        <input class=\"form-control\" type=\"text\"\n        formControlName=\"author\" required>\n        </div>\n        <div class=\"form-group\">\n        <label>Description</label>\n        <input class=\"form-control\" type=\"text\"\n        formControlName=\"description\" required>\n        </div>\n        <div class=\"form-group\">\n        <label>Published Year</label>\n        <input class=\"form-control\" type=\"text\"\n        formControlName=\"published_year\" required>\n        </div>\n        <div class=\"form-group\">\n        <label>Publisher</label>\n        <input class=\"form-control\" type=\"text\"\n        formControlName=\"publisher\" required>\n        </div>\n        <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\"\n        type=\"submit\">Update Book</button>\n        </div>\n        </form>\n        </div>\n        </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}